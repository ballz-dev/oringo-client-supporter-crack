package me.oringodevmode;

import java.util.Base64;
import net.minecraft.launchwrapper.IClassTransformer;

public class OringoTransformer implements IClassTransformer {
  public byte[] transform(String paramString1, String paramString2, byte[] paramArrayOfbyte) {
    if (paramArrayOfbyte != null && 
      paramString2.hashCode() == 1708492198) {
      String str = "";
      if (!str.isEmpty())
        return Base64.getDecoder().decode(str); 
    } 
    return paramArrayOfbyte;
  }
}
